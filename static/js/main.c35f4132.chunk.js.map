{"version":3,"sources":["../../src/magicUtils.ts","../../src/MagicCard.tsx","cards/GermanoCard.tsx","cards/NissaCard.tsx","cards/SpectralSailor.tsx","App.tsx","index.tsx"],"names":["manaCostMatcher","MagicCard","props","manaCost","manaIcons","frameClassesMap","styles","frameClass","manaCostArray","className","name","cost","src","artUrl","alt","expansionSymbol","length","textWithManaCosts","text","match","index","dangerouslySetInnerHTML","__html","GermanoCard","cardColor","descriptions","type","flavorText","fotterRightText","NissaCard","fotterLeftText","SpectralSailor","App","style","width","height","margin","padding","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c35f4132.chunk.js","sourcesContent":["export const manaCostMatcher = /\\{(\\w)\\}/g\n\nexport function manaCostParser(manaCost: string) {\n    return [...manaCost.matchAll(manaCostMatcher)]\n        .map(([_, cost]) => cost)\n}\n","import React from 'react'\nimport 'mana-font'\nimport 'keyrune'\nimport styles from './MagicCard.module.css'\nimport { manaCostMatcher, manaCostParser } from './magicUtils'\nimport './MTGFonts.css'\n\nexport interface CardProps {\n    name?: string\n    type?: string\n    manaCost?: string\n    descriptions?: string[]\n    flavorText?: string[]\n    expansionSymbol?: string\n    powerAndThougness?: string\n    artUrl?: string\n    fotterLeftText?: string[]\n    fotterRightText?: string[]\n    cardColor?: CardColor\n}\n\ntype CardColor =\n    | 'green'\n    | 'blue'\n    | 'black'\n    | 'red'\n    | 'white'\n    | 'uncolor'\n\nconst MagicCard: React.FC<CardProps> = (props) => {\n\n    const manaIcons: { [key: string]: string } = {\n        'G': 'ms ms-g ms-cost',\n        'R': 'ms ms-r ms-cost',\n        'U': 'ms ms-u ms-cost',\n        'B': 'ms ms-b ms-cost',\n        'W': 'ms ms-w ms-cost',\n    }\n\n    // const manaClassesMap: { [key: string]: string } = {\n    //     'G': 'green-mana',\n    //     'R': 'red-mana',\n    //     'U': 'blue-mana',\n    //     'B': 'black-mana',\n    //     'W': 'white-mana',\n    // }\n\n    const frameClassesMap: { [key in CardColor]: string } = {\n        'green': styles['green-frame'],\n        'red': styles['red-frame'],\n        'blue': styles['blue-frame'],\n        'black': styles['black-frame'],\n        'white': styles['white-frame'],\n        'uncolor': styles['uncolor-frame'],\n    }\n\n    const frameClass = props.cardColor\n        ? frameClassesMap[props.cardColor]\n        : 'uncolor-frame'\n\n    const manaCostArray = props.manaCost\n        && manaCostParser(props.manaCost)\n    return (\n        <div className={styles['card-container']}>\n            <div className={styles['card-background']}>\n                <div className={[styles['card-frame'], frameClass].join(' ')}>\n\n                    <div className={styles['frame-header']}>\n                        <div className={styles.name}>{props.name}</div>\n                        <div className={styles['mana-costs']}>\n                            {manaCostArray && manaCostArray.map(cost => (\n                                <div className={styles['mana-icon']}>\n                                    <i className={`${manaIcons[cost] || `ms ms-${cost} ms-cost`} ms-shadow`} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className={styles['frame-art']}>\n                        <img src={props.artUrl} alt=\"card art\" />\n                    </div>\n\n                    <div className={styles['frame-type-line']}>\n                        <div className={styles['type']}>{props.type}</div>\n                        {props.expansionSymbol && (\n                            <div className={styles['set-icon']}>\n                                {props.expansionSymbol.startsWith('ss')\n                                    ? <i className={`${props.expansionSymbol} ss-fw`} />\n                                    : <img src={props.expansionSymbol} alt=\"expansion-icon\" />\n                                }\n                            </div>\n                        )}\n                    </div>\n\n                    <div className={styles['frame-text-box']}>\n                        {props.descriptions?.map((text, index, { length }) => {\n                            const textWithManaCosts = text.replaceAll(manaCostMatcher, (match) => {\n                                const cost = match[1]\n                                return /*html*/`\n                                    <span style=\"font-size: 14px;\">\n                                        <i class=\"${`${manaIcons[cost] || `ms ms-${cost} ms-cost`}`}\"></i>\n                                    </span>\n                                `\n                            })\n                            return <p\n                                className={`description${index < length ? ' ftb-inner-margin' : ''}`}\n                                dangerouslySetInnerHTML={{ __html: textWithManaCosts }}\n                            />\n                        })}\n                        {props.flavorText?.map((text, index) => (\n                            <p\n                                className={`flavour-text${!index ? ' flavour-text-first-margin' : ''}`}\n                                dangerouslySetInnerHTML={{ __html: text }}\n                            />\n                        ))}\n                    </div>\n\n                    <div className={[styles['frame-bottom-info'], styles['inner-margin']].join(' ')}>\n                        <div className={styles['fbi-left']}>\n                            {props.fotterLeftText?.map(text => (\n                                <p dangerouslySetInnerHTML={{ __html: text }} />\n                            ))}\n                        </div>\n\n                        <div className={styles['fbi-center']}/>\n\n                        <div className={styles['fbi-right']}>\n                            {props.fotterRightText?.map(text => (\n                                <p dangerouslySetInnerHTML={{ __html: text }} />\n                            ))}\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport {\n    MagicCard\n}","import React from 'react'\nimport 'reactjs-mtg-card/dist/index.css'\nimport { MagicCard } from 'reactjs-mtg-card'\n\nconst GermanoCard = () => {\n    return (\n        <MagicCard\n            cardColor='blue'\n            name='Germano Gascho'\n            manaCost='{1}{U}'\n            descriptions={[\n                '{1}{U}<span>: programador alvo não pode ser bloqueado por código até final do turno</span',\n            ]}\n            artUrl=\"https://avatars.githubusercontent.com/u/35080245?s=400&u=12342e8d1aedc558809a8c5464e2ebf653efc9ab&v=4\"\n            type='Criatura &ndash; Humano Desenvolvedor'\n            flavorText={[\n                '\"Testa sanidade!\"',\n            ]}\n            fotterRightText={[\n                '&#x99; &amp; &#169; 2021 Germano Gascho',\n            ]}\n        />\n    )\n}\n\nexport default GermanoCard\n","import React from 'react'\nimport { MagicCard } from 'reactjs-mtg-card'\n\nconst NissaCard = () => {\n    return (\n        <MagicCard\n            cardColor=\"green\"\n            name='Oath of Nissa'\n            manaCost='{2}{G}{U}{W}{R}{B}'\n            descriptions={[\n                'When Oath of Nissa enters the battlefield, look at the top three cards of your library. You may reveal a creature, land, or planeswalker card from among them and put it into your hand. Put the rest on the bottom of your library in any order.',\n                'You may spend mana as though it were mana of any color to cast planeswalker spells.',\n            ]}\n            expansionSymbol=\"https://image.ibb.co/kzaLjn/OGW_R.png\"\n            artUrl=\"https://image.ibb.co/fqdLEn/nissa.jpg\"\n            type='Legendary Enchantment'\n            flavorText={['\"For the life of every plane, I will keep watch.\"']}\n            fotterLeftText={[\n                '140/184 R',\n                'OGW &#x2022; EN Wesley Burt',\n            ]}\n            fotterRightText={[\n                '&#x99; &amp; &#169; 2016 Wizards of the Coast',\n            ]}\n        />\n    )\n}\n\nexport default NissaCard\n","import React from 'react'\nimport { MagicCard } from 'reactjs-mtg-card'\n\nconst SpectralSailor = () => {\n    return (\n        <MagicCard\n            cardColor='blue'\n            name='Spectral Sailor'\n            manaCost='{U}'\n            descriptions={[\n                'Flash (<i>You may cast this spell any time you could cast an instant.)</i>',\n                'Flying',\n                '{3}{U}<span>: Draw a card</span',\n            ]}\n            expansionSymbol=\"ss ss-m20 ss-4x ss-uncommon ss-grad\"\n            artUrl=\"https://static2.mtgarena.pro/mtg/pict/spectral-sailor-m20--art-mtga.png\"\n            type='Creature &ndash; Sprit Pirate'\n            flavorText={[\n                '\"Any ship that sails on these mean seas for long is bound to pick up a ghost or two.\"',\n                '&ndash;Admiral Becket Brass',\n            ]}\n            fotterLeftText={[\n                '076/280 U',\n                'M20 &#x2022; EN CRISTI BALANESCU',\n            ]}\n            fotterRightText={[\n                '&#x99; &amp; &#169; 2019 Wizards of the Coast',\n            ]}\n        />\n    )\n}\n\nexport default SpectralSailor\n","import React from 'react'\n\nimport 'reactjs-mtg-card/dist/index.css'\nimport GermanoCard from './cards/GermanoCard'\nimport NissaCard from './cards/NissaCard'\nimport SpectralSailor from './cards/SpectralSailor'\n\nconst App = () => {\n  return (\n    <div style={{\n      width: '100%',\n      height: '100%',\n    }}>\n      <div style={{\n        width: '680px',\n        margin: 'auto',\n        padding: '12px',\n      }}>\n        <h1>Reactjs MTG Cards</h1>\n        <NissaCard/>\n        <SpectralSailor/>\n        <GermanoCard/>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'mana-font'\nimport 'keyrune'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}